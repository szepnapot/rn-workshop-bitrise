// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Game should match snapshot by default 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 15,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 50,
        }
      }
    >
      Quiz
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "darkblue",
          "borderRadius": 15,
          "borderWidth": 2,
          "margin": 10,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 18,
            },
            Object {
              "color": "darkblue",
            },
            undefined,
          ]
        }
      >
        New game
      </Text>
    </View>
  </View>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 15,
      }
    }
  >
    <Text
      testID="currentStep"
    >
      1 / 10
    </Text>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "darkblue",
          "borderRadius": 15,
          "borderWidth": 2,
          "margin": 10,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
      testID="thanos"
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 18,
            },
            Object {
              "color": "darkblue",
            },
            undefined,
          ]
        }
      >
        50 / 50
      </Text>
    </View>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="darkblue"
      hidesWhenStopped={true}
      size="large"
    />
  </View>,
]
`;

exports[`Game should match snapshot while loading 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 15,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 50,
        }
      }
    >
      Quiz
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "darkblue",
          "borderRadius": 15,
          "borderWidth": 2,
          "margin": 10,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 18,
            },
            Object {
              "color": "darkblue",
            },
            undefined,
          ]
        }
      >
        New game
      </Text>
    </View>
  </View>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 15,
      }
    }
  >
    <Text
      testID="currentStep"
    >
      1 / 10
    </Text>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "red",
                  "fontSize": 40,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "fontFamily": "entypo",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            testID="iconIcon"
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "red",
                  "fontSize": 40,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "fontFamily": "entypo",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            testID="iconIcon"
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "red",
                  "fontSize": 40,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "fontFamily": "entypo",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            testID="iconIcon"
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "darkblue",
          "borderRadius": 15,
          "borderWidth": 2,
          "margin": 10,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
      testID="thanos"
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 18,
            },
            Object {
              "color": "darkblue",
            },
            undefined,
          ]
        }
      >
        50 / 50
      </Text>
    </View>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="darkblue"
      hidesWhenStopped={true}
      size="large"
    />
  </View>,
]
`;

exports[`Game should match snapshot with questions 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 15,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 50,
        }
      }
    >
      Quiz
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "darkblue",
          "borderRadius": 15,
          "borderWidth": 2,
          "margin": 10,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 18,
            },
            Object {
              "color": "darkblue",
            },
            undefined,
          ]
        }
      >
        New game
      </Text>
    </View>
  </View>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 15,
      }
    }
  >
    <Text
      testID="currentStep"
    >
      1 / 10
    </Text>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "red",
                  "fontSize": 40,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "fontFamily": "entypo",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            testID="iconIcon"
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "red",
                  "fontSize": 40,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "fontFamily": "entypo",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            testID="iconIcon"
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <View
        testID="heart-full"
        tvParallaxProperties={true}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "red",
                  "fontSize": 40,
                },
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "fontFamily": "entypo",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            testID="iconIcon"
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "darkblue",
          "borderRadius": 15,
          "borderWidth": 2,
          "margin": 10,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
      testID="thanos"
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 18,
            },
            Object {
              "color": "darkblue",
            },
            undefined,
          ]
        }
      >
        50 / 50
      </Text>
    </View>
  </View>,
  <View
    style={
      Object {
        "backgroundColor": "lightblue",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "height": 200,
          "justifyContent": "center",
          "paddingHorizontal": 15,
          "paddingVertical": 15,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontSize": 20,
            "fontWeight": "800",
          }
        }
        testID="question"
      >
        Do you enjoy this workshop??
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "padding": 30,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "darkblue",
            "borderColor": "white",
            "borderRadius": 15,
            "borderWidth": 2,
            "margin": 10,
            "marginBottom": 30,
            "opacity": 1,
            "paddingHorizontal": 20,
            "paddingVertical": 10,
            "width": "100%",
          }
        }
        testID="answer-0"
      >
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 18,
              },
              undefined,
              undefined,
            ]
          }
        >
          YES
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "darkblue",
            "borderColor": "white",
            "borderRadius": 15,
            "borderWidth": 2,
            "margin": 10,
            "marginBottom": 30,
            "opacity": 1,
            "paddingHorizontal": 20,
            "paddingVertical": 10,
            "width": "100%",
          }
        }
        testID="answer-1"
      >
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 18,
              },
              undefined,
              undefined,
            ]
          }
        >
          No
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "darkblue",
            "borderColor": "white",
            "borderRadius": 15,
            "borderWidth": 2,
            "margin": 10,
            "marginBottom": 30,
            "opacity": 1,
            "paddingHorizontal": 20,
            "paddingVertical": 10,
            "width": "100%",
          }
        }
        testID="answer-2"
      >
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 18,
              },
              undefined,
              undefined,
            ]
          }
        >
          Not really
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "darkblue",
            "borderColor": "white",
            "borderRadius": 15,
            "borderWidth": 2,
            "margin": 10,
            "marginBottom": 30,
            "opacity": 1,
            "paddingHorizontal": 20,
            "paddingVertical": 10,
            "width": "100%",
          }
        }
        testID="answer-3"
      >
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 18,
              },
              undefined,
              undefined,
            ]
          }
        >
          Maybe
        </Text>
      </View>
    </View>
  </View>,
]
`;
